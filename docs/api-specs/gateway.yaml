openapi: 3.0.0
info:
  title: API Gateway
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: API Gateway server

paths:
  /validate:
    post:
      summary: Validate JWT token via user service
      description: Dùng để xác thực token gửi từ client, sẽ gọi về user-service để kiểm tra hợp lệ
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntrospectRequest'
      responses:
        '200':
          description: Token is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntrospectResponse'
        '401':
          description: Invalid or expired token

  /users/{userId}:
    get:
      summary: Get user details by ID (proxy to user-service)
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
        '404':
          description: User not found

  /teams/{teamId}:
    get:
      summary: Get team details (proxy to team-service)
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Team details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  members:
                    type: array
                    items:
                      type: integer
        '404':
          description: Team not found

  /tasks/{taskId}:
    get:
      summary: Get task details (proxy to task-service)
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  taskName:
                    type: string
                  description:
                    type: string
                  dueDate:
                    type: string
                    format: date-time
                  createBy:
                    type: integer
                  teamId:
                    type: integer
        '404':
          description: Task not found

components:
  schemas:
    IntrospectRequest:
      type: object
      properties:
        token:
          type: string
      required:
        - token

    IntrospectResponse:
      type: object
      properties:
        success:
          type: boolean
        username:
          type: string

    ApiResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        result:
          type: object
