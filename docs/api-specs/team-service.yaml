openapi: 3.0.0
info:
  title: Team Service API
  version: 1.0.0
servers:
  - url: http://localhost:8082
    description: Localhost Team Service

paths:
  /create:
    post:
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
      responses:
        '201':
          description: Team created

  /list_team:
    get:
      summary: Get all teams for a user
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of teams the user belongs to
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListTeamResponse'

  /{teamId}:
    get:
      summary: Get team details
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Team detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamResponse'

    delete:
      summary: Delete a team
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Team deleted

  /add-member:
    post:
      summary: Add a member to a team
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
        - name: teamId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Member added

  /remove-member:
    delete:
      summary: Remove a member from a team
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
        - name: teamId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Member removed

  /is-leader:
    get:
      summary: Check if user is leader of a team
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: integer
        - name: teamId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Leader check result
          content:
            application/json:
              schema:
                type: object
                properties:
                  isLeader:
                    type: boolean
        '404':
          description: Team or user not found

components:
  schemas:
    CreateTeamRequest:
      type: object
      properties:
        name:
          type: string
        userId:
          type: integer

    ListTeamResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    TeamMember:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string

    TeamResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        leaderId:
          type: integer
        members:
          type: array
          items:
            $ref: '#/components/schemas/TeamMember'
